name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    # Build the executable
    - name: Build executable
      run: |
        pyinstaller --noconfirm app.spec
    
    #List contents of dist directory to verify executable creation
    - name: List dist directory
      run: dir dist\app
    
    # Copy executable to repo's dist folder
    - name: Move executable to dist folder
      shell: cmd
      run: |
        if not exist "%GITHUB_WORKSPACE%\dist" (
          mkdir "%GITHUB_WORKSPACE%\dist"
        )
        
        if not exist "%GITHUB_WORKSPACE%\dist\app" (
          mkdir "%GITHUB_WORKSPACE%\dist\app"
        )

        copy dist\app\app.exe "%GITHUB_WORKSPACE%\dist\windows_aws_mover.exe"

    # Clean up build artifacts
    - name: Clean up build artifacts
      shell: cmd
      run: |
        rmdir /s /q dist\app

    # Push the executable to the repository
    - name: Commit and push dist folder
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git stash --include-untracked
        git pull --rebase origin main
        git stash pop || true
        git add dist/
        git commit -m "Add built exectuable to dist folder"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  

  build-macos:
    needs: build-windows
    runs-on: macos-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    # Build the macOS executable
    - name: Build macOS executable
      run: |
        pyinstaller --noconfirm app.spec
    
    #List contents of dist directory to verify executable creation
    - name: List dist directory
      run: |
        ls dist
    
    - name: List app directory
      run: |
        ls -lart dist/app

    # Copy executable to repo's dist folder
    - name: Move executable to dist folder
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/dist
        cp dist/app ${GITHUB_WORKSPACE}/dist/macos_aws_mover
    
    # Clean up build artifacts
    - name: Clean up build artifacts
      run: |
        rm -rf dist/app
        rm -rf dist/app.app

    # Commit and push the macOS executable to the repository
    - name: Commit and push dist folder
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git stash --include-untracked
        git pull --rebase origin main
        git stash pop || true
        git add dist/
        git commit -m "Add built exectuable to dist folder"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}